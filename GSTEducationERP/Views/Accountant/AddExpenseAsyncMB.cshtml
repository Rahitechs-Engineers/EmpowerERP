@model GSTEducationERPLibrary.Accountant.Accountant

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="card " style="padding:15px; margin-right:0px; margin-left:0px; margin-top:10px">
    <h4>Add Expense</h4>
    <hr />

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="row">
        <div class="col-md-4">
            @Html.LabelFor(model => model.ExpID,"Expense Category")
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ExpID, new SelectList(ViewBag.CourseList, "Value", "Text"), "Select", new { @id= "ExpenseCategory", @class = "form-control", @required = "required" })
                @Html.ValidationMessageFor(model => model.ExpID, "", new { @class = "text-danger" })
            </div>
        </div>

    </div>
    <br />

    @* This view start for Regular Expense *@
    <div id="RegularExpenseView">

        <div class="row">

            <div class="col-md-4">
                @Html.LabelFor(model => model.ExpenseType, "Expense Type")
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ExpenseType, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ExpenseType, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-4">
                @Html.LabelFor(model => model.VendorName,"Vendor Name")
                <div class="col-md-10">
                    @Html.EditorFor(model => model.VendorName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.VendorName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-4">
                @Html.LabelFor(model => model.PaymentMode, "Payment Mode" )
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PaymentMode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PaymentMode, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <br />
        <div class="row">



            <div class="col-md-4">
                @Html.LabelFor(model => model.Date, "Payment Date")
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <br />
        <div class="row">

            <div class="col-md-4">
                @Html.LabelFor(model => model.TranscationId, "TranscationId")
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TranscationId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TranscationId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-4">
                @Html.LabelFor(model => model.BankName, "Bank Name")
                <div class="col-md-10">
                    @Html.EditorFor(model => model.BankName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.BankName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-4">
                @Html.LabelFor(model => model.ChqueDate, "Cheque Date")
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ChqueDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ChqueDate, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />
            <div class="col-md-4">
                @Html.LabelFor(model => model.Amount,"Amount")
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <br />


    </div>
    @* This view End for Regular Expense *@


    @* This view start for Refund Expense *@

    <div id="RefundExpenseView">

        <div class="row">

            <div class="col-md-4">
                @Html.LabelFor(model => model.ExpenseType, "Expense Type")
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ExpenseType, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ExpenseType, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-4">
                @Html.LabelFor(model => model.VendorName,"Student Name")
                <div class="col-md-10">
                    @Html.EditorFor(model => model.VendorName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.VendorName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-4">
                @Html.LabelFor(model => model.VendorName,"Paid Fee")
                <div class="col-md-10">
                    @Html.EditorFor(model => model.VendorName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.VendorName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-4">
                @Html.LabelFor(model => model.PaymentMode, "Payment Mode" )
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PaymentMode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PaymentMode, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <br />
        <div class="row">



            <div class="col-md-4">
                @Html.LabelFor(model => model.Date, "Payment Date")
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <br />
        <div class="row">

            <div class="col-md-4">
                @Html.LabelFor(model => model.TranscationId, "TranscationId")
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TranscationId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TranscationId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-4">
                @Html.LabelFor(model => model.BankName, "Bank Name")
                <div class="col-md-10">
                    @Html.EditorFor(model => model.BankName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.BankName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-4">
                @Html.LabelFor(model => model.ChqueDate, "Cheque Date")
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ChqueDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ChqueDate, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />
            <div class="col-md-4">
                @Html.LabelFor(model => model.Amount,"Amount")
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <br />


    </div>

    @* This view End for Refund Expense *@

    @* This view start for Reference Expense *@

    <div id="ReferenceExpenseView">

        <div class="row">

            <div class="col-md-4">
                @Html.LabelFor(model => model.ExpenseType, "Expense Type")
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ExpenseType, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ExpenseType, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-4">
                @Html.LabelFor(model => model.VendorName,"Vendor Name")
                <div class="col-md-10">
                    @Html.EditorFor(model => model.VendorName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.VendorName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-4">
                @Html.LabelFor(model => model.PaymentMode, "Payment Mode" )
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PaymentMode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PaymentMode, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <br />
        <div class="row">



            <div class="col-md-4">
                @Html.LabelFor(model => model.Date, "Payment Date")
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <br />
        <div class="row">

            <div class="col-md-4">
                @Html.LabelFor(model => model.TranscationId, "TranscationId")
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TranscationId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TranscationId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-4">
                @Html.LabelFor(model => model.BankName, "Bank Name")
                <div class="col-md-10">
                    @Html.EditorFor(model => model.BankName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.BankName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-4">
                @Html.LabelFor(model => model.ChqueDate, "Cheque Date")
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ChqueDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ChqueDate, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />
            <div class="col-md-4">
                @Html.LabelFor(model => model.Amount,"Amount")
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <br />


    </div>
    @* This view End for Reference Expense *@

    <div class="row">
        <div class="col-md-4 ">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>

    </div>
    <div class="row">
        <button class="close text-danger" data-dismiss="modal" style="position: absolute; top: 8px; right: 8px;">&times;</button>
        <a href="@Url.Action(" ExpenseDashboardAsyncMB")" class="back-link">
            <video width="45" height="45" playsinline loop>
                <source src="~/Content/Admin/icon/Back.mp4" type="video/mp4" />
            </video>
        </a>
    </div>




</div>
}

<div>
    @Html.ActionLink("Back to List", "ExpenseDashboardAsyncMB")
</div>

<script type="text/javascript">
    $(document).ready(function () {
        
        
        $("#RegularExpenseView").hide();
        $("#RefundExpenseView").hide();
        $("#ReferenceExpenseView").hide();
        
        $("#ExpenseCategory").change(function () {
            var selectedValue = $(this).val();
            if (selectedValue === "1") {
                $("#RegularExpenseView").show();
                $("#RefundExpenseView").hide();
            } if (selectedValue === "2") {
                $("#RefundExpenseView").show();
                $("#RegularExpenseView").hide();
            } else {
                $("#RegularExpenseView").hide();
                $("#RefundExpenseView").hide();
                $("#ReferenceExpenseView").hide();
            }
        });

    });
</script>
